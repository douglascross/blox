!function(a,b){"function"==typeof define&&define.amd?define("BLOX",[],function(){return a.BLOX=b()}):"object"==typeof exports?module.exports=b():a.BLOX=b()}(this,function(){var a=augment(Object,function(b){return{constructor:function(a,b,c,d,e,f){this.x=a,this.y=b,this.z=c,this.normal=d||new THREE.Vector3,this.uv=e||new THREE.Vector2,this.negative=f||0},clone:function(){return new a(this.x,this.y,this.z,this.normal.clone(),this.uv.clone(),this.negative)},add:function(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this},subtract:function(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},cross:function(a){var b=this.x,c=this.y,d=this.z;return this.x=c*a.z-d*a.y,this.y=d*a.x-b*a.z,this.z=b*a.y-c*a.x,this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);return this.x/=a,this.y/=a,this.z/=a,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lerp:function(a,b){return this.add(a.clone().subtract(this).multiplyScalar(b)),this.normal.add(a.normal.clone().sub(this.normal).multiplyScalar(b)),this.uv.add(a.uv.clone().sub(this.uv).multiplyScalar(b)),this},interpolate:function(a,b){return this.clone().lerp(a,b)},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},flagPositive:function(){this.negative=1},flagNegative:function(){this.negative=-1},reportNegative:function(){return this.negative}}}),b=augment(Object,function(a){var c=1e-5,d=0,e=1,f=2,g=3;return{constructor:function(a){a instanceof Array||(a=[]),this.vertices=a,a.length>0?this.calculateProperties():this.normal=this.w=void 0,this.negative=0},calculateProperties:function(){var a=this.vertices[0],b=this.vertices[1],c=this.vertices[2];return this.normal=b.clone().subtract(a).cross(c.clone().subtract(a)).normalize(),this.w=this.normal.clone().dot(a),this},clone:function(){var a,c,d=new b;for(a=0,c=this.vertices.length;c>a;a++)d.vertices.push(this.vertices[a].clone());return d.calculateProperties(),d.negative=this.negative,d},flip:function(){var a,b=[];for(this.normal.multiplyScalar(-1),this.w*=-1,a=this.vertices.length-1;a>=0;a--)b.push(this.vertices[a]);return this.vertices=b,this},classifyVertex:function(a){var b=this.normal.dot(a)-this.w;return-c>b?f:b>c?e:d},classifySide:function(a){var b,c,h,i=0,j=0,k=a.vertices.length;for(b=0;k>b;b++)c=a.vertices[b],h=this.classifyVertex(c),h===e?i++:h===f&&j++;return i>0&&0===j?e:0===i&&j>0?f:0===i&&0===j?d:g},splitPolygon:function(a,c,h,i,j){var k=this.classifySide(a);if(k===d)(this.normal.dot(a.normal)>0?c:h).push(a);else if(k===e)i.push(a);else if(k===f)j.push(a);else{var l,m,n,o,p,q,r,s,t,u=[],v=[];for(m=0,l=a.vertices.length;l>m;m++)n=(m+1)%l,q=a.vertices[m],r=a.vertices[n],o=this.classifyVertex(q),p=this.classifyVertex(r),o!=f&&u.push(q),o!=e&&v.push(q),(o|p)===g&&(s=(this.w-this.normal.dot(q))/this.normal.dot(r.clone().subtract(q)),t=q.interpolate(r,s),u.push(t),v.push(t));u.length>=3&&i.push(new b(u).calculateProperties()),v.length>=3&&j.push(new b(v).calculateProperties())}},flagPositive:function(){this.negative=1,this.vertices.forEach(function(a){a.flagPositive()})},flagNegative:function(){this.negative=-1,this.vertices.forEach(function(a){a.flagNegative()})},reportNegative:function(){var a=[this.negative,0];return this.vertices.forEach(function(b){a[1]+=b.reportNegative()}),a[0]+a[1]}}}),c=augment(Object,function(a){var b=2;return{constructor:function(a){var b,d,e=[],f=[];if(this.polygons=[],this.front=this.back=void 0,a instanceof Array&&0!==a.length){for(this.divider=a[0].clone(),b=0,d=a.length;d>b;b++)this.divider.splitPolygon(a[b],this.polygons,this.polygons,e,f);e.length>0&&(this.front=new c(e)),f.length>0&&(this.back=new c(f))}},isConvex:function(a){var c,d;for(c=0;c<a.length;c++)for(d=0;d<a.length;d++)if(c!==d&&a[c].classifySide(a[d])!==b)return!1;return!0},build:function(a){var b,d,e=[],f=[];for(this.divider||(this.divider=a[0].clone()),b=0,d=a.length;d>b;b++)this.divider.splitPolygon(a[b],this.polygons,this.polygons,e,f);e.length>0&&(this.front||(this.front=new c),this.front.build(e)),f.length>0&&(this.back||(this.back=new c),this.back.build(f))},allPolygons:function(){var a=this.polygons.slice();return this.front&&(a=a.concat(this.front.allPolygons())),this.back&&(a=a.concat(this.back.allPolygons())),a},clone:function(){var a=new c;return a.divider=this.divider.clone(),a.polygons=this.polygons.map(function(a){return a.clone()}),a.front=this.front&&this.front.clone(),a.back=this.back&&this.back.clone(),a.negative=this.negative,a},invert:function(){var a,b,c;for(a=0,b=this.polygons.length;b>a;a++)this.polygons[a].flip();return this.divider.flip(),this.front&&this.front.invert(),this.back&&this.back.invert(),c=this.front,this.front=this.back,this.back=c,this},clipPolygons:function(a){var b,c,d,e;if(!this.divider)return a.slice();for(d=[],e=[],b=0,c=a.length;c>b;b++)this.divider.splitPolygon(a[b],d,e,d,e);return this.front&&(d=this.front.clipPolygons(d)),e=this.back?this.back.clipPolygons(e):[],d.concat(e)},clipTo:function(a){this.polygons=a.clipPolygons(this.polygons),this.front&&this.front.clipTo(a),this.back&&this.back.clipTo(a)},flagPositive:function(){this.allPolygons().forEach(function(a){a.flagPositive()})},flagNegative:function(){this.allPolygons().forEach(function(a){a.flagNegative()})},reportNegative:function(){var a="";return this.allPolygons().forEach(function(b){a+=(a?".":"")+b.reportNegative()}),a}}}),d=augment(Object,function(e){return{constructor:function(d){var e,f,g,h,i,j,k,l=[];if(d instanceof THREE.Geometry)this.matrix=new THREE.Matrix4;else{if(!(d instanceof THREE.Mesh)){if(d instanceof c)return this.tree=d,this.matrix=new THREE.Matrix4,this;throw"CSG: Given geometry is unsupported"}d.updateMatrix(),this.matrix=d.matrix.clone(),d=d.geometry}for(console.log(d),e=0,f=d.faces.length;f>e;e++)g=d.faces[e],i=d.faceVertexUvs[0][e],k=new b,k.originalFace=g,g instanceof THREE.Face3?(h=d.vertices[g.a],j=i?new THREE.Vector2(i[0].x,i[0].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[0],j),h.applyMatrix4(this.matrix),k.vertices.push(h),h=d.vertices[g.b],j=i?new THREE.Vector2(i[1].x,i[1].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[1],j),h.applyMatrix4(this.matrix),k.vertices.push(h),h=d.vertices[g.c],j=i?new THREE.Vector2(i[2].x,i[2].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[2],j),h.applyMatrix4(this.matrix),k.vertices.push(h)):(h=d.vertices[g.a],j=i?new THREE.Vector2(i[0].x,i[0].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[0],j),h.applyMatrix4(this.matrix),k.vertices.push(h),h=d.vertices[g.b],j=i?new THREE.Vector2(i[1].x,i[1].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[1],j),h.applyMatrix4(this.matrix),k.vertices.push(h),h=d.vertices[g.c],j=i?new THREE.Vector2(i[2].x,i[2].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[2],j),h.applyMatrix4(this.matrix),k.vertices.push(h),h=d.vertices[g.d],j=i?new THREE.Vector2(i[3].x,i[3].y):null,h=new a(h.x,h.y,h.z,g.vertexNormals[3],j),h.applyMatrix4(this.matrix),k.vertices.push(h)),k.calculateProperties(),l.push(k);this.tree=new c(l)},subtract:function(a){var b=this.tree.clone(),c=a.tree.clone();return b.flagPositive(),c.flagNegative(),console.log(b.reportNegative(),c.reportNegative()),b.invert(),b.clipTo(c),console.log(b.reportNegative(),c.reportNegative()),c.clipTo(b),console.log(b.reportNegative(),c.reportNegative()),c.invert(),console.log(b.reportNegative(),c.reportNegative()),c.clipTo(b),console.log(b.reportNegative(),c.reportNegative()),c.invert(),console.log(b.reportNegative(),c.reportNegative()),b.build(c.allPolygons()),console.log(b.reportNegative(),c.reportNegative()),b.invert(),console.log(b.reportNegative()),b=new d(b),b.matrix=this.matrix,b},union:function(a){var b=this.tree.clone(),c=a.tree.clone();return b.clipTo(c),c.clipTo(b),c.invert(),c.clipTo(b),c.invert(),b.build(c.allPolygons()),b=new d(b),b.matrix=this.matrix,b},intersect:function(a){var b=this.tree.clone(),c=a.tree.clone();return b.invert(),c.clipTo(b),c.invert(),b.clipTo(c),c.clipTo(b),b.build(c.allPolygons()),b.invert(),b=new d(b),b.matrix=this.matrix,b},toGeometry:function(){var a,b,c,d,e,f,g,h,i,j,k=(new THREE.Matrix4).getInverse(this.matrix),l=new THREE.Geometry,m=this.tree.allPolygons(),n=m.length,o={};for(a=0;n>a;a++){d=m[a],e=d.vertices.length;var p=d.reportNegative()<0?-1:1;for(b=2;e>b;b++){for(i=[],j=[],f=[],c=0;3>c;c++){var q=[0,b-1,b][c];g=d.vertices[q],i.push(new THREE.Vector2(g.uv.x,g.uv.y)),j.push(new THREE.Vector3(g.normal.x*p,g.normal.y*p,g.normal.z*p)),g=new THREE.Vector3(g.x,g.y,g.z),g.applyMatrix4(k),"undefined"!=typeof o[g.x+","+g.y+","+g.z]?f[c]=o[g.x+","+g.y+","+g.z]:(l.vertices.push(g),f[c]=o[g.x+","+g.y+","+g.z]=l.vertices.length-1)}h=new THREE.Face3(f[0],f[1],f[2],new THREE.Vector3(d.normal.x,d.normal.y,d.normal.z)),h.vertexNormals=j,l.faces.push(h),l.faceVertexUvs[0].push(i)}}return console.log(l),l},toMesh:function(a){var b=this.toGeometry(),c=new THREE.Mesh(b,a);return c.position.setFromMatrixPosition(this.matrix),c.rotation.setFromRotationMatrix(this.matrix),c}}}),e=new function(){var a=Math.PI/180,b=function(a){console.error("BLOX: "+a)};this.toGeometry=function(c){var f;if(c.shape&&(f=({sphere:function(){return new THREE.SphereGeometry(c.radius,16,12)},box:function(){return new THREE.BoxGeometry(c.x,c.y,c.z)},cylinder:function(){return new THREE.CylinderGeometry(c.top,c.bottom,c.height,16)}}[c.shape]||function(){b('Shape "'+c.shape+'" not supported, use sphere, box or cylinder.')})()),c.subtract){var g=[];c.subtract.forEach(function(a){var b=e.toGeometry(a);b&&g.push(new d(b))});var h,i=f?new d(f):null;if(i||(i=g.shift()),g.length){g.forEach(function(a,b){h=h?h.union(a):a});var j=i.subtract(h);f=j.toGeometry()}else f=i?i.toGeometry():f}else if(c.union){var g=[];c.union.forEach(function(a){var b=e.toGeometry(a);b&&g.push(new d(b))});var i=f?new d(f):null,h=i;g.forEach(function(a,b){h=h?h.union(a):a}),f=h.toGeometry()}else if(c.intersect){var g=[];c.intersect.forEach(function(a){var b=e.toGeometry(a);b&&g.push(new d(b))});var i=f?new d(f):null,k=i;g.forEach(function(a){k=k?k.intersect(a):a}),f=k.toGeometry()}return f&&c.ops&&c.ops.forEach(function(b){if(b.scale&&f.scale.apply(f,b.scale),b.rotate){var c=b.rotate;c[0]&&f.rotateX(c[0]*a),c[1]&&f.rotateY(c[1]*a),c[2]&&f.rotateZ(c[2]*a)}b.translate&&f.translate.apply(f,b.translate)}),f}};return e});